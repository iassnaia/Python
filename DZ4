Ex.1 " Вычислить число c заданной точностью d

 Пример:
 при d = 0.001, π = 3.142 10^(-1) ≤ d ≤10^(-10)"


from decimal import Decimal
import math

print(Decimal(math.pi).quantize(Decimal(input('Введите точность округления: '))))

Ex.2 "Задайте натуральное число N. Напишите программу,
которая составит список простых множителей числа N.":

import my_func

n = my_func.input_int_number('Введите натуральное число: ')
i = 2
list = []
while True:
    if n % i == 0:
        list.append(i)
        n /= i
        i = 2
    elif n == 1:
        break
    else:
        i += 1

print('Число простое' if len(list) == 1 else f'Простые множители числа: {list}')



Ex.3 "Задайте последовательность чисел. Напишите программу,
 которая выведет список неповторяющихся элементов исходной последовательности.

import my_func

list = my_func.random_list(0, 10, 10)
print(list)
newlist = []
for i in range(len(list)):  # находим повторяющиеся элементы списка
    for j in range(i + 1, len(list)):
        if list[i] == list[j]:
            newlist.append(list[i])  # записываем их в новый список
            break

newlist = [x for x in list if x not in newlist]
print(newlist)

Ex.4 " Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100)
многочлена и записать в файл многочлен степени k.
 Пример:
 k=2 => 2x^2 + 4x + 5 = 0 или x^2 + 5 = 0 или 10x^2 = 0

import my_func
import itertools

k = my_func.input_int_number('Введите натуральную степень: ')
list_r = my_func.random_list(0, 101, k + 1)  # получаем список рандомных коэффициентов (функция в my_func)
if list_r[0] == 0:
    list_r[0] = my_func.random_list(1, 101, 1)

template = ['x^'] * (k - 1) + ['x']
polynom = [[v, x, dg] for v, x, dg in itertools.zip_longest(list_r, template, range(k, 1, -1), fillvalue='') if x != 0]
for i in range(len(polynom) - 1):
    polynom[i].append(' + ')

polynom = list(itertools.chain(*polynom))
polynom.append(' = 0')

print("".join(map(str, polynom)))

with open('4_1.txt', 'w') as file:
    file.write("".join(map(str, polynom)))

